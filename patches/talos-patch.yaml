machine:
  network:
    interfaces:
      - interface: eth0
        dhcp: true
        vip:
          ip: 10.2.252.1

cluster:
  allowSchedulingOnControlPlanes: true
  network:
    cni:
      name: none
  proxy:
    disabled: true
  inlineManifests:
    - name: cilium
      contents: |
        ---
        # Source: cilium/templates/cilium-agent/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-ca-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: cilium-ca
          namespace: kube-system
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYzZoWVIvWnJ1RWlLT3ZHdVFGT2NhREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFNU1UZ3lNalExV2hjTk1qY3dNVEU0TVRneQpNalExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJpTVNGQms4dzI4NVdNcFkzRW5QdUkxNW1xWUZVVEZGY2pGeTNOMndITVNxL1QxM0wKSzAvUStSUDFKZ2ZBWTR0eW94SXpxSUlsL2I4WGZFOGZoQ3QrV2d6QlBSbmJRUE12NWIzeENwTE9vQWNhaDhDUgplOE9BNTZxa1oxVEJKUUc4QUpQYllqdFYySHBIdTYrSXZUaXVVYlR6YkxrSmhvK3pxNlZSeUtmaC90ajZnSGRXCmdpOHhYdmhxRTk0YlV1SEl5K0x1MlFRUDNNRnlKYS9CaU1RUVNsVTVDb2x5aVpFengveFBDS2ZiU3Fsak5iaDEKdkcySkJEZ0dWUVdUQTBDaGY3Rk5UekduRkZNYkdUOUNlTURIQzBUVXcwWU5SbDFtdDRSbmM2RWU5UnRnWDNHbwpBais2ajkvS1lHdFI5SkZ2dmdBR0EvM2lSZktHcm9QTmVJWkZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVsVXJJVDhvcTFHSnBveEFkUnYzbWk4WFgwMWt3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKdFVtUEdTeGlkcDVGTnJrWWxwbU5qQWltS3pSczVUb25vRXNwbTdHcmkrZHQ0WSs5bWRrZUJECklQaUVBQWxpaS9ucTA2dXNINCtCelA4Tm9UNURjSWNWdE9meDJGbTB1RzVqWm1ubmJOOGpoenlra25VM3k3UnoKTlpzZzlKc3hZN1dEemNoeGwxcnppTGxwcGE5Zm5Ob3V4MnJWRlRlOVREWisraFNmT0ptYmVud1VHc1BveWk4NQpUcXkrQjFFVmxsUVE5VjNQRC9CYzJBL3F3L2hmbi81VStoU29KYVNlY3FaUDNPNG96dFBsSlBER2dKTGl4U3BWCjNjV2xlckxITVkvVHYwZUZpUS83UXJsWkVwRkNoSEF5S29WdVNQbWRXOCsyNFdTQjVsUE9SOVdOL3BRYXI5clQKMEpCbEh1OEJpakk4MVRUVlhWNnlUSjZnQzlLdmFyTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1lqRWhRWlBNTnZPVmpLV054Sno3aU5lWnFtQlZFeFJYSXhjdHpkc0J6RXF2MDlkCnl5dFAwUGtUOVNZSHdHT0xjcU1TTTZpQ0pmMi9GM3hQSDRRcmZsb013VDBaMjBEekwrVzk4UXFTenFBSEdvZkEKa1h2RGdPZXFwR2RVd1NVQnZBQ1QyMkk3VmRoNlI3dXZpTDA0cmxHMDgyeTVDWWFQczZ1bFVjaW40ZjdZK29CMwpWb0l2TVY3NGFoUGVHMUxoeU12aTd0a0VEOXpCY2lXdndZakVFRXBWT1FxSmNvbVJNOGY4VHdpbjIwcXBZelc0CmRieHRpUVE0QmxVRmt3TkFvWCt4VFU4eHB4UlRHeGsvUW5qQXh3dEUxTU5HRFVaZFpyZUVaM09oSHZVYllGOXgKcUFJL3VvL2Z5bUJyVWZTUmI3NEFCZ1A5NGtYeWhxNkR6WGlHUlFJREFRQUJBb0lCQVFDTGN2YlhPd0tZbStrRApKeFFodm9RV0ZSb1NNeFRqSHRLSk13SWphaVhHME9DU1ZLZXFteHk1NEo5R3h3NVN5K2RReEx0NnlYSnQyWFoxCmY3YXJhTnJHQWpDcWxGSXJMNU9LOGFsNUl6dEE4d0hyVmVHbGNsNGVaYzhKQXdPSTRCZHQxYVMwTVFXOEIyMmsKZmxJdTN0a1drZjBtWVRLNjhHQmUvOUR4S3ZuODFoa1RlRlc4bWxieFI0OWcycTJXVWI3RG4wZFJwLzJHeHB0bApUYjFMZ3ZNOGllZGpQK0tEY0ozMmR3OHFPb0JMVE1JdHY2dVhCMm9OYzZQOUpMa3hLRjRLT3RnSUZCU0NxQ1RhCksvd0ZaT0VFZzdlSWR0NlZMdzlDZWw3TmgvZmFqZ1c2VnJ2Vi9YU01JVkVYRG1MMERpSldaeGpBaHovUFRsT08KSnltZDlQOEJBb0dCQU0vNHVrTGxnbURSWnFKR1dQRjR3YnFyYzVWeGREbFpLUlM4NVFnSkdmTU9ndnlndEtjOAo5VlNEQzRIMlJ3RGJyRDdxNDlBRUd3d3llYnN4UGRYOTJEOHFlbjhsUkZXbmV1eGtCZWVpdnVSUzBUZ0ZBeW95CnJnVHpWVjh0YWRPNHliNVdxU2MwS3pncXJxM2RvMFIrc3hKRzgxdlhkWUc4RFgwYTI2ZHVhN3NsQW9HQkFPNDYKZ1VCZnNjRVAvbWVYOWQ5Q3pMY1Awd0JHcDNkYVpsVzRTd24zcjZaall2MDdEKzRDYmViTlJKV3BudlF0QXAvTgpFS1BxaEl0ZWpoOTBEdHRwNjRjZHNoNjR5YlJFa3paL1REV3JQRnVyMVY0Q1lkeG5Zcm80SENhWDZGdGJHWmRZCnI0WXplUEowUVFONVVFQWhCY09IVkYyNjNqMW11MnRlSURZM1drU2hBb0dBUjZ4V3ROdFg5WG4xUHhPemIzVEkKZjBhN1ROT08xSHpQMVovTDV0c01JR0h0N3BhTDY5N3NSYlhyNzF3cTJEYmN3OG83dk9MTlY0VEZ3eWVUUWY1NwoyamtQZ21ZYmlORnhZYXFQQm1kbUZsWWNXSXdSclNkT0pkS2VwM0NGT2p4Qyt0L3U1OTNvenpDV2hzRU5sWHQ4CngxM0FYUFNDUUxYSWlFY0xVRWFUeGlrQ2dZQnB2aXBWQ3FUNkQwRmJka1k2M1luRTBBOVdsZ1lMb21LK05kbUoKQ1JvOGZ1MFhmam5wNmNZaXBvYUU4QStRVHRKVllFNjhrNEpWNHBpdk9YTEd6ZE12M0d5TjJuUWR3anFkL0E4MQoyMVlsVXJhWXpmSG1SVFc3ZHVCMytRRzRXMDJXc2xUbStyMzYwTU55NlV4SHl1Q21FOUhNOFA5b3Zjci9NMzZVCjBpa05RUUtCZ1FETVRzczdpS0lJUGs4NVZPbUhGSXp2NFNUQmxoSldkSnlTMTFLNy9DZy8vcWJYaXBSTHNlSEgKV1BHZ0VEeTVEWmIvdFo0K3RkVEpRZVlKVDIwZERuOEEreFdrNmZscFFkU1JNTFI1VzNpeVNGSTNnTmpvTFFmWAp1ZHovU0d4Y0w2Zm1QYzFXbGZjUFhEZjhyNjRpSE1oSmc2Y1B5T3FYQnJYd055c0kzTFBQeGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        ---
        # Source: cilium/templates/hubble/tls-helm/server-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-server-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYzZoWVIvWnJ1RWlLT3ZHdVFGT2NhREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFNU1UZ3lNalExV2hjTk1qY3dNVEU0TVRneQpNalExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJpTVNGQms4dzI4NVdNcFkzRW5QdUkxNW1xWUZVVEZGY2pGeTNOMndITVNxL1QxM0wKSzAvUStSUDFKZ2ZBWTR0eW94SXpxSUlsL2I4WGZFOGZoQ3QrV2d6QlBSbmJRUE12NWIzeENwTE9vQWNhaDhDUgplOE9BNTZxa1oxVEJKUUc4QUpQYllqdFYySHBIdTYrSXZUaXVVYlR6YkxrSmhvK3pxNlZSeUtmaC90ajZnSGRXCmdpOHhYdmhxRTk0YlV1SEl5K0x1MlFRUDNNRnlKYS9CaU1RUVNsVTVDb2x5aVpFengveFBDS2ZiU3Fsak5iaDEKdkcySkJEZ0dWUVdUQTBDaGY3Rk5UekduRkZNYkdUOUNlTURIQzBUVXcwWU5SbDFtdDRSbmM2RWU5UnRnWDNHbwpBais2ajkvS1lHdFI5SkZ2dmdBR0EvM2lSZktHcm9QTmVJWkZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVsVXJJVDhvcTFHSnBveEFkUnYzbWk4WFgwMWt3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKdFVtUEdTeGlkcDVGTnJrWWxwbU5qQWltS3pSczVUb25vRXNwbTdHcmkrZHQ0WSs5bWRrZUJECklQaUVBQWxpaS9ucTA2dXNINCtCelA4Tm9UNURjSWNWdE9meDJGbTB1RzVqWm1ubmJOOGpoenlra25VM3k3UnoKTlpzZzlKc3hZN1dEemNoeGwxcnppTGxwcGE5Zm5Ob3V4MnJWRlRlOVREWisraFNmT0ptYmVud1VHc1BveWk4NQpUcXkrQjFFVmxsUVE5VjNQRC9CYzJBL3F3L2hmbi81VStoU29KYVNlY3FaUDNPNG96dFBsSlBER2dKTGl4U3BWCjNjV2xlckxITVkvVHYwZUZpUS83UXJsWkVwRkNoSEF5S29WdVNQbWRXOCsyNFdTQjVsUE9SOVdOL3BRYXI5clQKMEpCbEh1OEJpakk4MVRUVlhWNnlUSjZnQzlLdmFyTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRSVVWQ3Y0UENpYWwzQjkyRFgyRStqekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFNU1UZ3lNalExV2hjTk1qY3dNVEU0TVRneQpNalExV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdk95bGxTeStac2hEem9IaE1VL00Kazh0eUk5UmpjZ21HTjRvd0R4NUoyZ1A4VU84UWkzVlVMSVNKR0VXNlQ2L3JhWlM1ODYxdjcxVFFHNDY5WHZSVwpHeTlUWVJNSkJGNXExSUwvQTkzNGJseFQwTVoyT3JDNll0MjcrYjRMU3VBdHZYbG1ueVFMRThOOCtDcHQ2NXlGCm5GMnlZWFdkSE01TEFwSXovU2JBc3pwRldTT3lRNjUvdUsrcm9BbC8xZHVBanZ0T2RPTHJpN3FkSGMxYzV5LzUKRzZkUUc0aWM0U05wcEgvRnNWTkFaenFFakhGeDBIWWU5RGZxcmdkY0xBT3FoY2ROc2ZrSUhtUzgwRUFwZTlDdQoyZkNXdWkzUFpDR0w3VmxuWlFvdTdhU1JzMWVNUkh0Z3g1VzJjUG96NVhXTm0zMVo4cjJFRkwrKzA1N2FiQi9OCkZ3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTVlNzaFB5aXJVWW1tagpFQjFHL2VhTHhkZlRXVEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBR1lrWkZJbHdpRlkvQWsyVm9iTzd5dU9xZGM2L3kKZkd6QWJuUTVGOWVhV0F5d1I4QjJoR3B2RnRHeUhDc3BvM3gxY3c0eGlGblBuSmY3M3dUWFduZ0hYZy9kRGF1LwoxRVN1ek5GRFAraXBmdmJBWjNuYlBLRWlwVFpzeFRlMDZwS2hNTXdQME5xOW9DK2JUWmc2ZDNwaFkrb2owVHNRClJUdFRXZTRCRHlFSXRPdEVzTzdVb054b2N2cWhSdTBwV3JCY1JmOUp6Q0doOTZ1RVZMK0dMU1VzL2ovQVRGc3MKQllUVm80VS8wbTRXRzFGdzVLbjY5b3dVNHN0dnBGS0FmN1pkallmS1VJTmxvcTVicEFtWVl3bmpSQmNCN3JuRApuRWlVdUxBOGticlRycEN1Z1QrK0IyUnE4VUxyd2ZELzYxR0FYejQ1dGc2bmZ1TWV6cWNYb2ZHUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdk95bGxTeStac2hEem9IaE1VL01rOHR5STlSamNnbUdONG93RHg1SjJnUDhVTzhRCmkzVlVMSVNKR0VXNlQ2L3JhWlM1ODYxdjcxVFFHNDY5WHZSV0d5OVRZUk1KQkY1cTFJTC9BOTM0Ymx4VDBNWjIKT3JDNll0MjcrYjRMU3VBdHZYbG1ueVFMRThOOCtDcHQ2NXlGbkYyeVlYV2RITTVMQXBJei9TYkFzenBGV1NPeQpRNjUvdUsrcm9BbC8xZHVBanZ0T2RPTHJpN3FkSGMxYzV5LzVHNmRRRzRpYzRTTnBwSC9Gc1ZOQVp6cUVqSEZ4CjBIWWU5RGZxcmdkY0xBT3FoY2ROc2ZrSUhtUzgwRUFwZTlDdTJmQ1d1aTNQWkNHTDdWbG5aUW91N2FTUnMxZU0KUkh0Z3g1VzJjUG96NVhXTm0zMVo4cjJFRkwrKzA1N2FiQi9ORndJREFRQUJBb0lCQUZzcWN3aldTNWI3b3NUZgpKZFVPNWZDWDV4OWxHUXZwanF2MGNoYUpqaWUzYnFWN2gyZFVtZWJWbWZadGgyZDJ3OG55Sy8xcnZ5MGxwenIxCkdXcmR5ME5aQmdvOURrZmVhL3phcmNhbThZQUg2NlkrYnNVSmpSZXlXa2c4cmVSVzQ1dWdIcVpDMVZtWEp4SDIKSDQ3bnZBM2xwUE9rdHNrMHZ6dWhZNWNRZ1VLNjBNN2xEdG4vQXNFSnBzckJBRGt6YngydkR2ajNLZ21ONThJQwpKWkpZVHVOdWRGYU9IVkFkZHdqL3Fkdm5qRXB5bDJUWXYvNjd4bWhCaEltcUFiVXdzNnpTcWNUWGNDUXdZN0I3CkpXRjAzQURMVmM3cDM4TmdkYnBhS0FXaXRFcm9tTXU3dWZnTlM1Z0RSVWhBV2gzVE5QbmI4RWV3ZE1tbEcwNTUKS0dicjNaRUNnWUVBK2JzUlBKV1V1Q0swN0JTcDVSOE01ZGwwT0tvampyS3R2Q3J5cnluUXBmcTJSZEpvRmVuMwpVellncTFpYjRMZVZYUndPeTZJdVJ5WEovZ3JsTFh1dWloWEE3cXg0N2R5alNNWnJwWGdsQmJTbVErZGpDV0I5Cm1SOEh6dnBDVUNUN1QyUzRHUm9Bd3JZTk1SZDd6bFovd3VKN1Z5eGlOYnJlc01vNXpVQmhJODhDZ1lFQXdhck0KWGtzb2g4NVpUQzVuMkZqRGd3WEhXbDhYeEVNUnRYU2w0eXVCQVd2WExkQmRQM0lQNW16RFY3M1JYV01nRjQybgp1MktxRXJBcHpzbytWVkx3VktFSFIvYVdob1ZETlBDajZEdGdvQy85THNaa3NScG8wcDlPQVo2ZldSTjNlRXdUCnE1S2VBdFN4Z3NtUjcwcUQ5SmpNa1VON0o4MXpSK0xQbExIRTdEa0NnWUJVMG9sRVBycEk0T0Q2M3ZubDdPb0EKbUIrMXIzUnNYNXhMTVh0RXE3dEc1U1ZNQ2U5NG9nTnpyQXJrcURBcDM3Rkg4dVBEbnM2Qk5BQ3IzUitDbDJQdApXdjR4RXp2djd1VTNMczRaWWZtUk9vN091YVVWNWtSQzRodFEzZ2Z3R04rVFUrNkQrQ1VSL2F2MVpMaVVtU1RFCkdSRXp4c3VFM0hnUExHRDlxa1JVV1FLQmdHdS9pUUNWTkRHS25xZ0IwWWpPcWNnRnVRb1FpZnFKamhxMGtXNjQKVDRmbzVjajVla2ZJUUF4bFNyRlFUR0YydXU0Znc4Zy9kbnY3UXVkb0loSDZtUGVjdDU1VUZSODJtVk9rNXF4WQpETVJTcnJ3TmFRd1hzMllyZDR6eklaaS9lZUtXQVFPZUNRZHVLbXlubE9mYlAxc2dmLy81MlZVbHV4T3RudXdOCms1QVJBb0dCQU5TOUptbXE5VVJIL0V4Z0xBaDFQdXFQUm5IeHJFNStrRmYwMjk1djI2OFF3bzBUeHJkNjIvQjgKUUlYb0xCQjVLcnNsVS8vekJ6TXdVZXlYZGlBYUMxeE1CRnB1ZGxKZktXeitTOStQcXFqazVTQUF0MEtFYy9jWAp3aktsblRLTlZDaUxsbUY1M0l1MEloSlRya3pTNG5iaS82bWVoclJWNWJKUGV2RC80c1hiCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/templates/cilium-configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: cilium-config
          namespace: kube-system
        data:

          # Identity allocation mode selects how identities are shared between cilium
          # nodes by setting how they are stored. The options are "crd" or "kvstore".
          # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
          #   These can be queried with:
          #     kubectl get ciliumid
          # - "kvstore" stores identities in an etcd kvstore, that is
          #   configured below. Cilium versions before 1.6 supported only the kvstore
          #   backend. Upgrades from these older cilium versions should continue using
          #   the kvstore by commenting out the identity-allocation-mode below, or
          #   setting it to "kvstore".
          identity-allocation-mode: crd
          identity-heartbeat-timeout: "30m0s"
          identity-gc-interval: "15m0s"
          cilium-endpoint-gc-interval: "5m0s"
          nodes-gc-interval: "5m0s"
          skip-cnp-status-startup-clean: "false"

          # If you want to run cilium in debug mode change this value to true
          debug: "false"
          debug-verbose: ""
          # The agent can be put into the following three policy enforcement modes
          # default, always and never.
          # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
          enable-policy: "default"
          # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
          # field is not set.
          proxy-prometheus-port: "9964"

          # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
          # address.
          enable-ipv4: "true"

          # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
          # address.
          enable-ipv6: "false"
          # Users who wish to specify their own custom CNI configuration file must set
          # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
          custom-cni-conf: "false"
          enable-bpf-clock-probe: "false"
          # If you want cilium monitor to aggregate tracing for packets, set this level
          # to "low", "medium", or "maximum". The higher the level, the less packets
          # that will be seen in monitor output.
          monitor-aggregation: medium

          # The monitor aggregation interval governs the typical time between monitor
          # notification events for each allowed connection.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-interval: "5s"

          # The monitor aggregation flags determine which TCP flags which, upon the
          # first observation, cause monitor notifications to be generated.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-flags: all
          # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
          # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
          bpf-map-dynamic-size-ratio: "0.0025"
          # bpf-policy-map-max specifies the maximum number of entries in endpoint
          # policy map (per endpoint)
          bpf-policy-map-max: "16384"
          # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
          # backend and affinity maps.
          bpf-lb-map-max: "65536"
          bpf-lb-external-clusterip: "false"

          # Pre-allocation of map entries allows per-packet latency to be reduced, at
          # the expense of up-front memory allocation for the entries in the maps. The
          # default value below will minimize memory usage in the default installation;
          # users who are sensitive to latency may consider setting this to "true".
          #
          # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
          # this option and behave as though it is set to "true".
          #
          # If this value is modified, then during the next Cilium startup the restore
          # of existing endpoints and tracking of ongoing connections may be disrupted.
          # As a result, reply packets may be dropped and the load-balancing decisions
          # for established connections may change.
          #
          # If this option is set to "false" during an upgrade from 1.3 or earlier to
          # 1.4 or later, then it may cause one-time disruptions during the upgrade.
          preallocate-bpf-maps: "false"

          # Regular expression matching compatible Istio sidecar istio-proxy
          # container image names
          sidecar-istio-proxy-image: "cilium/istio_proxy"

          # Name of the cluster. Only relevant when building a mesh of clusters.
          cluster-name: default
          # Unique ID of the cluster. Must be unique across all conneted clusters and
          # in the range of 1 and 255. Only relevant when building a mesh of clusters.
          cluster-id: "0"

          # Encapsulation mode for communication between nodes
          # Possible values:
          #   - disabled
          #   - vxlan (default)
          #   - geneve
          # Default case
          routing-mode: "tunnel"
          tunnel-protocol: "vxlan"


          # Enables L7 proxy for L7 policy enforcement and visibility
          enable-l7-proxy: "true"

          enable-ipv4-masquerade: "true"
          enable-ipv4-big-tcp: "false"
          enable-ipv6-big-tcp: "false"
          enable-ipv6-masquerade: "true"

          enable-xt-socket-fallback: "true"
          install-no-conntrack-iptables-rules: "false"

          auto-direct-node-routes: "false"
          enable-local-redirect-policy: "false"

          kube-proxy-replacement: "true"
          kube-proxy-replacement-healthz-bind-address: ""
          bpf-lb-sock: "false"
          enable-health-check-nodeport: "true"
          node-port-bind-protection: "true"
          enable-auto-protect-node-port-range: "true"
          enable-svc-source-range-check: "true"
          enable-l2-neigh-discovery: "true"
          arping-refresh-period: "30s"
          enable-k8s-networkpolicy: "true"
          # Tell the agent to generate and write a CNI configuration file
          write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
          cni-exclusive: "true"
          cni-log-file: "/var/run/cilium/cilium-cni.log"
          enable-endpoint-health-checking: "true"
          enable-health-checking: "true"
          enable-well-known-identities: "false"
          enable-remote-node-identity: "true"
          synchronize-k8s-nodes: "true"
          operator-api-serve-addr: "127.0.0.1:9234"
          # Enable Hubble gRPC service.
          enable-hubble: "true"
          # UNIX domain socket for Hubble server to listen to.
          hubble-socket-path: "/var/run/cilium/hubble.sock"
          # An additional address for Hubble server to listen to (e.g. ":4244").
          hubble-listen-address: ":4244"
          hubble-disable-tls: "false"
          hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
          hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
          hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
          ipam: "kubernetes"
          ipam-cilium-node-update-rate: "15s"
          disable-cnp-status-updates: "true"
          cnp-node-status-gc-interval: "0s"
          egress-gateway-reconciliation-trigger-interval: "1s"
          enable-vtep: "false"
          vtep-endpoint: ""
          vtep-cidr: ""
          vtep-mask: ""
          vtep-mac: ""
          enable-bgp-control-plane: "false"
          procfs: "/host/proc"
          bpf-root: "/sys/fs/bpf"
          cgroup-root: "/sys/fs/cgroup"
          enable-k8s-terminating-endpoint: "true"
          enable-sctp: "false"
          k8s-client-qps: "5"
          k8s-client-burst: "10"
          remove-cilium-node-taints: "true"
          set-cilium-node-taints: "true"
          set-cilium-is-up-condition: "true"
          unmanaged-pod-watcher-interval: "15"
          tofqdns-dns-reject-response-code: "refused"
          tofqdns-enable-dns-compression: "true"
          tofqdns-endpoint-max-ip-per-hostname: "50"
          tofqdns-idle-connection-grace-period: "0s"
          tofqdns-max-deferred-connection-deletes: "10000"
          tofqdns-proxy-response-max-delay: "100ms"
          agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

          mesh-auth-enabled: "true"
          mesh-auth-queue-size: "1024"
          mesh-auth-rotated-identities-queue-size: "1024"
          mesh-auth-gc-interval: "5m0s"

          proxy-connect-timeout: "2"
          proxy-max-requests-per-connection: "0"
          proxy-max-connection-duration-seconds: "0"

          external-envoy-proxy: "false"
        ---
        # Source: cilium/templates/cilium-agent/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - services
          - pods
          - endpoints
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - watch
          # This is used when validating policies in preflight. This will need to stay
          # until we figure out how to avoid "get" inside the preflight, and then
          # should be removed ideally.
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumbgppeeringpolicies
          - ciliumclusterwideenvoyconfigs
          - ciliumclusterwidenetworkpolicies
          - ciliumegressgatewaypolicies
          - ciliumendpoints
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumidentities
          - ciliumlocalredirectpolicies
          - ciliumnetworkpolicies
          - ciliumnodes
          - ciliumnodeconfigs
          - ciliumcidrgroups
          - ciliuml2announcementpolicies
          - ciliumpodippools
          verbs:
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          - ciliumendpoints
          - ciliumnodes
          verbs:
          - create
        - apiGroups:
          - cilium.io
          # To synchronize garbage collection of such resources
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          verbs:
          - delete
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          - ciliumnodes/status
          verbs:
          - get
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          - ciliumendpoints/status
          - ciliumendpoints
          - ciliuml2announcementpolicies/status
          verbs:
          - patch
        ---
        # Source: cilium/templates/cilium-operator/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          # to automatically delete [core|kube]dns pods so that are starting to being
          # managed by Cilium
          - delete
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # To remove node taints
          - nodes
          # To set NetworkUnavailable false on startup
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform LB IP allocation for BGP
          - services/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          # to check apiserver connectivity
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform the translation of a CNP that contains `ToGroup` to its endpoints
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies
          - ciliumclusterwidenetworkpolicies
          verbs:
          # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
          - create
          - update
          - deletecollection
          # To update the status of the CNPs and CCNPs
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          verbs:
          # Update the auto-generated CNPs and CCNPs status.
          - patch
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          - ciliumidentities
          verbs:
          # To perform garbage collection of such resources
          - delete
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          # To synchronize garbage collection of such resources
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          verbs:
          - create
          - update
          - get
          - list
          - watch
            # To perform CiliumNode garbage collector
          - delete
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes/status
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpointslices
          - ciliumenvoyconfigs
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
          - patch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - update
          resourceNames:
          - ciliumloadbalancerippools.cilium.io
          - ciliumbgppeeringpolicies.cilium.io
          - ciliumclusterwideenvoyconfigs.cilium.io
          - ciliumclusterwidenetworkpolicies.cilium.io
          - ciliumegressgatewaypolicies.cilium.io
          - ciliumendpoints.cilium.io
          - ciliumendpointslices.cilium.io
          - ciliumenvoyconfigs.cilium.io
          - ciliumexternalworkloads.cilium.io
          - ciliumidentities.cilium.io
          - ciliumlocalredirectpolicies.cilium.io
          - ciliumnetworkpolicies.cilium.io
          - ciliumnodes.cilium.io
          - ciliumnodeconfigs.cilium.io
          - ciliumcidrgroups.cilium.io
          - ciliuml2announcementpolicies.cilium.io
          - ciliumpodippools.cilium.io
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumpodippools
          verbs:
          - get
          - list
          - watch
        - apiGroups:
            - cilium.io
          resources:
            - ciliumpodippools
          verbs:
            - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools/status
          verbs:
          - patch
        # For cilium-operator running in HA mode.
        #
        # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
        # between multiple running instances.
        # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
        # common and fewer objects in the cluster watch "all Leases".
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        ---
        # Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium
        subjects:
        - kind: ServiceAccount
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium-operator
        subjects:
        - kind: ServiceAccount
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-agent/role.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/templates/cilium-agent/rolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-config-agent
        subjects:
          - kind: ServiceAccount
            name: "cilium"
            namespace: kube-system
        ---
        # Source: cilium/templates/hubble/peer-service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: hubble-peer
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: hubble-peer
        spec:
          selector:
            k8s-app: cilium
          ports:
          - name: peer-service
            port: 443
            protocol: TCP
            targetPort: 4244
          internalTrafficPolicy: Local
        ---
        # Source: cilium/templates/cilium-agent/daemonset.yaml
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: cilium
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-agent
        spec:
          selector:
            matchLabels:
              k8s-app: cilium
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
          template:
            metadata:
              annotations:
                # Set app AppArmor's profile to "unconfined". The value of this annotation
                # can be modified as long users know which profiles they have available
                # in AppArmor.
                container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
                container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
              labels:
                k8s-app: cilium
                app.kubernetes.io/name: cilium-agent
                app.kubernetes.io/part-of: cilium
            spec:
              containers:
              - name: cilium-agent
                image: "quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-agent
                args:
                - --config-dir=/tmp/cilium/config-map
                startupProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  failureThreshold: 105
                  periodSeconds: 2
                  successThreshold: 1
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 10
                  timeoutSeconds: 5
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 3
                  timeoutSeconds: 5
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_CLUSTERMESH_CONFIG
                  value: /var/lib/cilium/clustermesh/
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                lifecycle:
                  postStart:
                    exec:
                      command:
                      - "bash"
                      - "-c"
                      - |
                            set -o errexit
                            set -o pipefail
                            set -o nounset
                            
                            # When running in AWS ENI mode, it's likely that 'aws-node' has
                            # had a chance to install SNAT iptables rules. These can result
                            # in dropped traffic, so we should attempt to remove them.
                            # We do it using a 'postStart' hook since this may need to run
                            # for nodes which might have already been init'ed but may still
                            # have dangling rules. This is safe because there are no
                            # dependencies on anything that is part of the startup script
                            # itself, and can be safely run multiple times per node (e.g. in
                            # case of a restart).
                            if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                            then
                                echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                                iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                            fi
                            echo 'Done!'
                            
                  preStop:
                    exec:
                      command:
                      - /cni-uninstall.sh
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    add:
                      - CHOWN
                      - KILL
                      - NET_ADMIN
                      - NET_RAW
                      - IPC_LOCK
                      - SYS_ADMIN
                      - SYS_RESOURCE
                      - DAC_OVERRIDE
                      - FOWNER
                      - SETGID
                      - SETUID
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                # Unprivileged containers need to mount /proc/sys/net from the host
                # to have write access
                - mountPath: /host/proc/sys/net
                  name: host-proc-sys-net
                # Unprivileged containers need to mount /proc/sys/kernel from the host
                # to have write access
                - mountPath: /host/proc/sys/kernel
                  name: host-proc-sys-kernel
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Unprivileged containers can't set mount propagation to bidirectional
                  # in this case we will mount the bpf fs from an init container that
                  # is privileged and set the mount propagation from host to container
                  # in Cilium.
                  mountPropagation: HostToContainer
                # Check for duplicate mounts before mounting
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                - name: cilium-run
                  mountPath: /var/run/cilium
                - name: etc-cni-netd
                  mountPath: /host/etc/cni/net.d
                - name: clustermesh-secrets
                  mountPath: /var/lib/cilium/clustermesh
                  readOnly: true
                  # Needed to be able to load kernel modules
                - name: lib-modules
                  mountPath: /lib/modules
                  readOnly: true
                - name: xtables-lock
                  mountPath: /run/xtables.lock
                - name: hubble-tls
                  mountPath: /var/lib/cilium/tls/hubble
                  readOnly: true
                - name: tmp
                  mountPath: /tmp
              initContainers:
              - name: config
                image: "quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b"
                imagePullPolicy: IfNotPresent
                command:
                - cilium
                - build-config
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                volumeMounts:
                - name: tmp
                  mountPath: /tmp
                terminationMessagePolicy: FallbackToLogsOnError
              # Mount the bpf fs if it is not mounted. We will perform this task
              # from a privileged container because the mount propagation bidirectional
              # only works from privileged containers.
              - name: mount-bpf-fs
                image: "quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b"
                imagePullPolicy: IfNotPresent
                args:
                - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
                command:
                - /bin/bash
                - -c
                - --
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  privileged: true
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  mountPropagation: Bidirectional
              - name: clean-cilium-state
                image: "quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b"
                imagePullPolicy: IfNotPresent
                command:
                - /init-container.sh
                env:
                - name: CILIUM_ALL_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-state
                      optional: true
                - name: CILIUM_BPF_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-bpf-state
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    add:
                      - NET_ADMIN
                      - SYS_ADMIN
                      - SYS_RESOURCE
                    drop:
                      - ALL
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Required to mount cgroup filesystem from the host to cilium agent pod
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                  mountPropagation: HostToContainer
                - name: cilium-run
                  mountPath: /var/run/cilium # wait-for-kube-proxy
              # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
              - name: install-cni-binaries
                image: "quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b"
                imagePullPolicy: IfNotPresent
                command:
                  - "/install-plugin.sh"
                resources:
                  requests:
                    cpu: 100m
                    memory: 10Mi
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                  - name: cni-path
                    mountPath: /host/opt/cni/bin # .Values.cni.install
              restartPolicy: Always
              priorityClassName: system-node-critical
              serviceAccount: "cilium"
              serviceAccountName: "cilium"
              automountServiceAccountToken: true
              terminationGracePeriodSeconds: 1
              hostNetwork: true
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # For sharing configuration between the "config" initContainer and the agent
              - name: tmp
                emptyDir: {}
                # To keep state between restarts / upgrades
              - name: cilium-run
                hostPath:
                  path: /var/run/cilium
                  type: DirectoryOrCreate
                # To keep state between restarts / upgrades for bpf maps
              - name: bpf-maps
                hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
              # To keep state between restarts / upgrades for cgroup2 filesystem
              - name: cilium-cgroup
                hostPath:
                  path: /sys/fs/cgroup
                  type: DirectoryOrCreate
              # To install cilium cni plugin in the host
              - name: cni-path
                hostPath:
                  path:  /opt/cni/bin
                  type: DirectoryOrCreate
                # To install cilium cni configuration in the host
              - name: etc-cni-netd
                hostPath:
                  path: /etc/cni/net.d
                  type: DirectoryOrCreate
                # To be able to load kernel modules
              - name: lib-modules
                hostPath:
                  path: /lib/modules
                # To access iptables concurrently with other processes (e.g. kube-proxy)
              - name: xtables-lock
                hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
                # To read the clustermesh configuration
              - name: clustermesh-secrets
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: cilium-clustermesh
                      optional: true
                      # note: items are not explicitly listed here, since the entries of this secret
                      # depend on the peers configured, and that would cause a restart of all agents
                      # at every addition/removal. Leaving the field empty makes each secret entry
                      # to be automatically projected into the volume as a file whose name is the key.
                  - secret:
                      name: clustermesh-apiserver-remote-cert
                      optional: true
                      items:
                      - key: tls.key
                        path: common-etcd-client.key
                      - key: tls.crt
                        path: common-etcd-client.crt
                      - key: ca.crt
                        path: common-etcd-client-ca.crt
              - name: host-proc-sys-net
                hostPath:
                  path: /proc/sys/net
                  type: Directory
              - name: host-proc-sys-kernel
                hostPath:
                  path: /proc/sys/kernel
                  type: Directory
              - name: hubble-tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-server-certs
                      optional: true
                      items:
                      - key: tls.crt
                        path: server.crt
                      - key: tls.key
                        path: server.key
                      - key: ca.crt
                        path: client-ca.crt
        ---
        # Source: cilium/templates/cilium-operator/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: cilium-operator
          namespace: kube-system
          labels:
            io.cilium/app: operator
            name: cilium-operator
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-operator
        spec:
          # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
          # for more details.
          replicas: 2
          selector:
            matchLabels:
              io.cilium/app: operator
              name: cilium-operator
          # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
          # of one replica and no user configured Recreate strategy.
          # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
          # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 50%
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                io.cilium/app: operator
                name: cilium-operator
                app.kubernetes.io/part-of: cilium
                app.kubernetes.io/name: cilium-operator
            spec:
              containers:
              - name: cilium-operator
                image: "quay.io/cilium/operator-generic:v1.14.5@sha256:303f9076bdc73b3fc32aaedee64a14f6f44c8bb08ee9e3956d443021103ebe7a"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-operator-generic
                args:
                - --config-dir=/tmp/cilium/config-map
                - --debug=$(CILIUM_DEBUG)
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: debug
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 3
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 3
                  failureThreshold: 5
                volumeMounts:
                - name: cilium-config-path
                  mountPath: /tmp/cilium/config-map
                  readOnly: true
                terminationMessagePolicy: FallbackToLogsOnError
              hostNetwork: true
              restartPolicy: Always
              priorityClassName: system-cluster-critical
              serviceAccount: "cilium-operator"
              serviceAccountName: "cilium-operator"
              automountServiceAccountToken: true
              # In HA mode, cilium-operator pods must not be scheduled on the same
              # node as they will clash with each other.
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        io.cilium/app: operator
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # To read the configuration from the config map
              - name: cilium-config-path
                configMap:
                  name: cilium-config
        ---
        # Source: cilium/templates/cilium-secrets-namespace.yaml
        # Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

        # Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
