cluster:
  allowSchedulingOnControlPlanes: true
  network:
    cni:
      name: none
  proxy:
    disabled: true
  inlineManifests:
    - name: cilium
      contents: |
        ---
        # Source: cilium/templates/cilium-agent/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/hubble-relay/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "hubble-relay"
          namespace: kube-system
        ---
        # Source: cilium/templates/hubble-ui/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "hubble-ui"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-ca-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: cilium-ca
          namespace: kube-system
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTm00UFJKZ2RJaklEQU81MDhiN0xiekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TWpFME1UY3lPRFF6V2hjTk1qY3dNakV6TVRjeQpPRFF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFFFeVhmTVdzNUxweGhzdGd0YUxCQXhPN1FQUjdKQTBRUHZXWDdmOGdPam0wcStqdWIKSUlvM29CSGRGbkp4V0hrVGk1UDl5aWdZdk5DRlJINVhUb0hUQXljNEhzUmV6QUUrcGZGUFhVZ3F1VC82SjQ3SgpUL3F5WFI3UklSMlRXeXBqMFRzWlNCQm4rWnZZQVUvS05takwxMTJlcWZ6VmVyVWl5WFlZWnJCZW5VNElPUzAvCnh5QjMwN3NSOG5qMkJzenVrU0Nvd1hFd3dEMGtoVjBJNXZJRTdKQzBZQ0FKWktGQnR3OFlrYzlHQkx6VjJYOVAKS2F2TGJRVHc1M3BwTEhBU29neXhKT29neFhhbEhqNlN0dHhFNWUyWDdlZTNsM2RJNzlDOGtTemlpbE1PamNhTQo1Q0JxKzB1eGxpeDhMMm9RcEJGRlVJOTZaWnA1WUxySEZndHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVOUc2S05zNmZPblM0cUNNSXhUclpKYkZhOXd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHNmt1UXVKZlJ2WXIxbkpqUTM0WlZEUmlON0k3UEFRbEVnZW42aW9yTUNQclFVUXFmcVlJRElHCjNkbXUwRFg5K2tVdXllYkFld3F6b0dxT0NHRU1HT2Rpb3pwMDNNU3VHelpQK01MRHJDNG1zanBhR3ZaeVdMRzUKczRoL1lTOEh0NUp4QVVQYk53SnNhWVJWL1R4WWdSTjdoZlhMOS9YRTBVcllHZDk4SVZFZWgzd0JuUE1ZYUxVSgppYjVCZ053R0Rhamt4a1lMNmRrRkRUK1ppOURBUW9EN3FlRWgwWjVGdVNCSWovclJiZURuZlk2b2lhRmpLeDlXCkhDSjJuYjhVZEtISW9oUndPN3ZUbE1wOGt5MXk0UTg5MHhPWjNJME9Cc0ZaYTNhaW0xRDQ0aTZpYnc0L1hOK0IKNEdyOGk0QTRlamtYdXpHR09manNnTHJ6aW11blM3Yz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMEJNbDN6RnJPUzZjWWJMWUxXaXdRTVR1MEQwZXlRTkVENzFsKzMvSURvNXRLdm83Cm15Q0tONkFSM1JaeWNWaDVFNHVUL2Nvb0dMelFoVVIrVjA2QjB3TW5PQjdFWHN3QlBxWHhUMTFJS3JrLytpZU8KeVUvNnNsMGUwU0VkazFzcVk5RTdHVWdRWi9tYjJBRlB5alpveTlkZG5xbjgxWHExSXNsMkdHYXdYcDFPQ0RrdApQOGNnZDlPN0VmSjQ5Z2JNN3BFZ3FNRnhNTUE5SklWZENPYnlCT3lRdEdBZ0NXU2hRYmNQR0pIUFJnUzgxZGwvClR5bXJ5MjBFOE9kNmFTeHdFcUlNc1NUcUlNVjJwUjQra3JiY1JPWHRsKzNudDVkM1NPL1F2SkVzNG9wVERvM0cKak9RZ2F2dExzWllzZkM5cUVLUVJSVkNQZW1XYWVXQzZ4eFlMY3dJREFRQUJBb0lCQVFETzA3bTVlZTRURVBueApRMDBQRmhqY3lPUjVxY2VJRis3M2xsUmhBa3RoN01FbkQwVmdsWi9PV3habXBZRnNtWDBBcUtXYWgvQURadXYvCkRHNXBhbWd4ejlpVU9FRUoyYzhDN3dCRzIzcDR2VnVTMU85aHZGWitKWUlVYnM1dlF4ZUgwTnJsN25RZ1prVTcKR1ZLdXRoYkZTSGFPMkhteDJoOWpUTTVPd3dSZGhrT3g4ckdEdENSM20zN2c3ekdTbmVsRTIrUk1OOGVEQnNRSApxSktQK041d3k4Z1Q2eXllemh3c2RGZWc2Qm80T0VYSkJrSFJuUmNFREZlczFmSkQ2RVZpNk42VGgxdTlIOU4rCmlVdVp5c0NHdDJqQUdoMmhpZ3JqVlBFbTB1YjdxZzZOMVVZaURCZVBYYURGYkJMTDcvUEFrRkFueS9sU1VlVXEKaXBFVWlFMEJBb0dCQU5kUHpjS1Q1Y3VnS1NQVExCaHhrNjJjSDc3WDR3ZVVUSlVLZUdNQ2krN3JzMmpTNS82bQpSUkl2ZTBaS2JmRWdROXVsSGpaeHg2QXd5SlNoVW1rbnVweEdyTDFrQmtMZm45dm9VRWNTQytVTTBnYzI3MmlMCmZwVUZlb2tLZGNma2hMbTU1dTZ0V1F4RmVyZXZmR3pCeHZBWUt5cTFmZzNHcGc2TkVSVkNodUhqQW9HQkFQZGwKUGFrbEpWellLMlgrN291RWU3Q09ENExMUWIzNjFlZDhyMmlIQkpoY0hWeHlRcGJkQjM4L2NIMXRlQndFS3ZXZQp0NmgzNTcrMVNlSHNYNGd0c1F0TnhkVWRuLzRKak9oTk5rMGdzYWNqL1RRb2xVQklKQ2NYZWhxWlNWV0h4NEFHCkFwaG5DRkpSUGw1OUdUNjg0WU9ldTJ1emxTS2IxN2wxbWlQM0ZTVXhBb0dBZTVKY3FCalQ0UXI1c1lyb0d0dE0KZzI1QU5mcVhYT2s3RHFya3J3WnVJMkI1Sm1jdEtOUnFmZVpzWE1vbzBTUFFia1lVMGZCNVBySGczSlM5eElZOQpycVZOVEtFVWl0cm5WNEc4V1IyOVgrYjh2NUZDMUFDRFZLbkJTdGVMQTM5ZXdXMDFZYlJ4ai81c1VQSFJlbVc0CmRHR2FuTGR2TWg3WmZTNXZLSUYzQWpzQ2dZRUE0MFozNmg4OC90bDhyUndScTh5UEVUakJHU2gvZ2ZlaGNTT0QKeGFSY1hWZ3FoUlpYQkYrVUZwdUNUVWczRW8zbHBYWWxSVGk2aDgwVlRkOG9PR081aFNmeXVnR1lUUG9iSUFKbgpBMTRvdHVNQ0oxdXRHYnZzc3BrSHpNM0xxQzZ2NFhZa0JqeUpVWTVmbk5DU1U2ZVVDYVhXaW5BVmJ4RDZrdDl1Ck51SXo0OUVDZ1lBcVFpYUdPQk1NOVNCLzdHaVlkOXJNamZVdWxlYjVvQVVpMi9SVjZCMGR3ajlRRTBwTko4YVoKa2tXRmRKTm1nQTIwRHRMSmRHVDc3ZTB1RUgxZXdvOGtEZWxGMXp0cnJpY0FCQW9HQUwydTlBOUNRYWRhTy9Xagp5V2N5UzNoSXBYazlxTWpTR21LOW1JMzJ6Qm1nTlJwOXRXc2plZ1pHTnBrSi9XbXgyZVkvenc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        ---
        # Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-relay-client-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTm00UFJKZ2RJaklEQU81MDhiN0xiekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TWpFME1UY3lPRFF6V2hjTk1qY3dNakV6TVRjeQpPRFF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFFFeVhmTVdzNUxweGhzdGd0YUxCQXhPN1FQUjdKQTBRUHZXWDdmOGdPam0wcStqdWIKSUlvM29CSGRGbkp4V0hrVGk1UDl5aWdZdk5DRlJINVhUb0hUQXljNEhzUmV6QUUrcGZGUFhVZ3F1VC82SjQ3SgpUL3F5WFI3UklSMlRXeXBqMFRzWlNCQm4rWnZZQVUvS05takwxMTJlcWZ6VmVyVWl5WFlZWnJCZW5VNElPUzAvCnh5QjMwN3NSOG5qMkJzenVrU0Nvd1hFd3dEMGtoVjBJNXZJRTdKQzBZQ0FKWktGQnR3OFlrYzlHQkx6VjJYOVAKS2F2TGJRVHc1M3BwTEhBU29neXhKT29neFhhbEhqNlN0dHhFNWUyWDdlZTNsM2RJNzlDOGtTemlpbE1PamNhTQo1Q0JxKzB1eGxpeDhMMm9RcEJGRlVJOTZaWnA1WUxySEZndHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVOUc2S05zNmZPblM0cUNNSXhUclpKYkZhOXd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHNmt1UXVKZlJ2WXIxbkpqUTM0WlZEUmlON0k3UEFRbEVnZW42aW9yTUNQclFVUXFmcVlJRElHCjNkbXUwRFg5K2tVdXllYkFld3F6b0dxT0NHRU1HT2Rpb3pwMDNNU3VHelpQK01MRHJDNG1zanBhR3ZaeVdMRzUKczRoL1lTOEh0NUp4QVVQYk53SnNhWVJWL1R4WWdSTjdoZlhMOS9YRTBVcllHZDk4SVZFZWgzd0JuUE1ZYUxVSgppYjVCZ053R0Rhamt4a1lMNmRrRkRUK1ppOURBUW9EN3FlRWgwWjVGdVNCSWovclJiZURuZlk2b2lhRmpLeDlXCkhDSjJuYjhVZEtISW9oUndPN3ZUbE1wOGt5MXk0UTg5MHhPWjNJME9Cc0ZaYTNhaW0xRDQ0aTZpYnc0L1hOK0IKNEdyOGk0QTRlamtYdXpHR09manNnTHJ6aW11blM3Yz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5sUExNTE1BOEhjdnN4eWpWakNnV1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJeE5ERTNNamcwTTFvWERUSTNNREl4TXpFMwpNamcwTTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXArL0FtQzA0YTFxSTZjcW13RTJFVUlqOHVIL0IKR1ZVbElLVjJ0aFRxUkxGVjJ5NUJTMlE0NHllQ3BNQTNNb0JNY09icjRFTEw1b3NTalAreDBiM3RBYzlWazBsSwpJNjZqZXFLaDdQNGFZcGVnMFY0UnpKS2pXaThrTnRKVk1jOStsMmVxV013cXI1b0FkMnVRRks3RmNNSEljUXA1Ci9SVFBURmdWMjUwWnIwRWZ0YWx4RzJjZE1Wc0RvUWQzRDVEdDFFQS9rM0dYZ2llamwzZzMxL0V2dG0wMlBDd3IKRlBEcE5TbzdNSmo3b2pCVWpBZm9GTGVDZnV5aHFISU9hZzVHVGN6SlkwMjVlcGJMVEIvd3NEc1FXbjdQc2xNUgpLcHRCeU5UcE8rZ1lXbXRIMk01NGlxalJSNnpxOXh0ekphYnVKQnFwdlgyYkJBT3Y1NHZwazJSU25RSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlQwYm9vMnpwODZkTGlvSXdqRk90awpsc1ZyM0RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSkU3cUMrUXo3SFV1ZnF5SURWWTViUWQ2UTFGR1pWcWtib2Fpd2phZiszNEJpclAKUENiWEpQaUNqQ2NUK0pYeVoxcHZuMWpCNFZGem5Yb3crQ20xVitkZlRHVXdBSjlZMytsaStTTEJKbTRySENFSwpSdWtNYnZwaHhuZ0ZYL3JDNERHZGZIZ1Roc2h5SzBEZUFYa3RqSGZMbEFDN1BnK011eGZVODJUU2JBRlhDREt3CkQrSzhJUm9EZjBQQW9FOG1NYUwvbDBuZnhXNzFQbFlJQ0dleVJYNEdNRHBsRjR0SzZMQzdUK20rZFZkeHlLQWMKdEpNeUc5RlJhOXkvNENhM3hVZWNTNDRSRmpNVFVpSmtnQmxQNXl3QmtUcmVlWVlQb3ZSckllMUp2anB0UEh3Lwp2L0hyVEVYTnpqVlpOemNseEErWC9UWHJRR2ZWOWYvQWVjY1EvYWc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcCsvQW1DMDRhMXFJNmNxbXdFMkVVSWo4dUgvQkdWVWxJS1YydGhUcVJMRlYyeTVCClMyUTQ0eWVDcE1BM01vQk1jT2JyNEVMTDVvc1NqUCt4MGIzdEFjOVZrMGxLSTY2amVxS2g3UDRhWXBlZzBWNFIKekpLaldpOGtOdEpWTWM5K2wyZXFXTXdxcjVvQWQydVFGSzdGY01ISWNRcDUvUlRQVEZnVjI1MFpyMEVmdGFseApHMmNkTVZzRG9RZDNENUR0MUVBL2szR1hnaWVqbDNnMzEvRXZ0bTAyUEN3ckZQRHBOU283TUpqN29qQlVqQWZvCkZMZUNmdXlocUhJT2FnNUdUY3pKWTAyNWVwYkxUQi93c0RzUVduN1BzbE1SS3B0QnlOVHBPK2dZV210SDJNNTQKaXFqUlI2enE5eHR6SmFidUpCcXB2WDJiQkFPdjU0dnBrMlJTblFJREFRQUJBb0lCQUV1TlJTd3hTK3lnTW5CYgp4MkZFZm41czRxVnVkRVVkVlRLMnZnMTBvMkI4RjVBZjR5Z3owcFAvTm50QUxwVDl1MllmdllhTEJvaVZrS2IyCmNkMVdnTVlMclFneU5MU1E0T05QUDJJTGYzdFRrL29kUkF5dysrU2F5TVFSSkZyZ2FxZGE3L3c2L2drNlUzTm0KWk0rcFFSSlZYQVBmSHJxSkhpbk9oeWJpS3FmNC9ZVUVHUkE0VHJhVmcvQ3JRSEIvRUxkdFJsQlBNdjlzL2VQUQo5RUdEOEdXRTg4VGtiTnRsdVhuVzRZSnNINUMxbi8rVFMzQ2RtMG5iVy8wUkVsK3Z6Nm9GUnFTdDM3ZU9qU1lhCldlcmxtNHhEaE1MK2hjZTk1Yk13QjFBaEJzYnNwWklMendwZVVLajhVTXloa1VLRFVzaGVEbXh1eFJXMGQzWjcKTndMa3BkRUNnWUVBd29LV2ZzNDNPWnljQ3N3Z0lpN0FRYVBtYjlhemlpYmhXTkJ5RTd5a0NmL3g4QldTSmJXSApzWWlGYnJCTlhYL0dsbVAzWTk5cVNKQVg2amdlY3J1bzhTWnNkaGh4MlpVK0hUTktwVlc0c05Qbyt2SXNOM1hoClBTY3JQQk45cGJVNnNPN3o4OUNaUnJPU2l4LzVDNUlnTHdVLzBURGNwaHQrT3liN3hwZ3FVdHNDZ1lFQTNRYWEKeTRFcXdoTldZRDJmckNpYmwvUTI5aUs3dXpJVmhNNHdSTTB3dUpPSDNyM1JReWtBRkg3NFF5b21LU2Q1TVJyTgpzLytaVW5VY2p2Qm5lcHhyekZWcng5M016RXVienZKU09ITC9vQ1N3QWxTSEREZ3ZaVFZKdW40N2dGMUVmR1A5ClR5YzFJTjFGcXdZc2g1QURkQWtTU1Y0bUVQZHhLY2NhbUZGdVhlY0NnWUFnUzFBelU0ZWx3QlBFVXluT294WjIKajREVjlyNnVaRkFyejhmdzhQUUhXUUJSVFRPTG9UMGJROEJycFVmakN6RHNqVUpveVpJNjQvbWtnSmJGazlTegozUjVLNlRvVjF3cU9ESk1MS2xWVXZvcERCK3hCZFFmbGdGaFVUQ1FqWEJpWGdjVHRLU2dacmZ6WnJvQko1SVFGCmFvaXk4YnJndFZYYStsajVHeENEMndLQmdRREhvSWQrOXBMZjV3ZEV0V1BaNG5ObHN6VlE2ZDRWSFE5Q2U5Z3MKekFjTkxuS3hRMUFXRUpuNTZSUGgxZGZSbzgxYUJKTjExNDFyWkVyKzd6TUhFdkJxQlZ6cmovREJOQ2p0cVArSgo3SlBrMkQ0QVhNZjh5V0pGVHZQZ2ROTFpCV1F0MVVHY2xCVHdNZW9TcGVqaUo3aDJ2UnEvR1VIWVlTVGNUdkErClVvNFVVUUtCZ0VMQ3V1bmZYK1NKN1pENXh5aEhXOUFWSmVURnBlTEJnWTJBdG02UEFNOW9TclNiYVJMYm5ucVYKak5Bc0RmQURaNkpOK0liVHNBalB3Szd6MHVPdzNDaXhGQ3J5OVI5MFZPdWJ0TVNVN1cwM05obEIyVWRMdlRYegpXak53THY5YXBZSDRwU2JmbEwrVEltbkhKcmpUU255QUJIbWhkNGx3YytyS0swU0cyWHJrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/templates/hubble/tls-helm/server-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-server-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTm00UFJKZ2RJaklEQU81MDhiN0xiekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TWpFME1UY3lPRFF6V2hjTk1qY3dNakV6TVRjeQpPRFF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFFFeVhmTVdzNUxweGhzdGd0YUxCQXhPN1FQUjdKQTBRUHZXWDdmOGdPam0wcStqdWIKSUlvM29CSGRGbkp4V0hrVGk1UDl5aWdZdk5DRlJINVhUb0hUQXljNEhzUmV6QUUrcGZGUFhVZ3F1VC82SjQ3SgpUL3F5WFI3UklSMlRXeXBqMFRzWlNCQm4rWnZZQVUvS05takwxMTJlcWZ6VmVyVWl5WFlZWnJCZW5VNElPUzAvCnh5QjMwN3NSOG5qMkJzenVrU0Nvd1hFd3dEMGtoVjBJNXZJRTdKQzBZQ0FKWktGQnR3OFlrYzlHQkx6VjJYOVAKS2F2TGJRVHc1M3BwTEhBU29neXhKT29neFhhbEhqNlN0dHhFNWUyWDdlZTNsM2RJNzlDOGtTemlpbE1PamNhTQo1Q0JxKzB1eGxpeDhMMm9RcEJGRlVJOTZaWnA1WUxySEZndHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVOUc2S05zNmZPblM0cUNNSXhUclpKYkZhOXd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHNmt1UXVKZlJ2WXIxbkpqUTM0WlZEUmlON0k3UEFRbEVnZW42aW9yTUNQclFVUXFmcVlJRElHCjNkbXUwRFg5K2tVdXllYkFld3F6b0dxT0NHRU1HT2Rpb3pwMDNNU3VHelpQK01MRHJDNG1zanBhR3ZaeVdMRzUKczRoL1lTOEh0NUp4QVVQYk53SnNhWVJWL1R4WWdSTjdoZlhMOS9YRTBVcllHZDk4SVZFZWgzd0JuUE1ZYUxVSgppYjVCZ053R0Rhamt4a1lMNmRrRkRUK1ppOURBUW9EN3FlRWgwWjVGdVNCSWovclJiZURuZlk2b2lhRmpLeDlXCkhDSjJuYjhVZEtISW9oUndPN3ZUbE1wOGt5MXk0UTg5MHhPWjNJME9Cc0ZaYTNhaW0xRDQ0aTZpYnc0L1hOK0IKNEdyOGk0QTRlamtYdXpHR09manNnTHJ6aW11blM3Yz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRWVVmZnNuWHF4RHIrQ1I2Ym11ZVNEakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TWpFME1UY3lPRFF6V2hjTk1qY3dNakV6TVRjeQpPRFF6V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeEl0MmVSdm9DOUlvN1I1K2twN28KTnZ4WFBUN1VMQkE3K3FYUmlRV0JBNXlCMjVBanl0NGRJaTNZaENvenFiaTBEZmtadEpOaGlvMjFmWGtlYWlDNAptdHdKeFRuR3BoWkNiaG9kYUZEMmFUdTl6ZE0xNGdGRGNhNG9VWGhvZyttUnU4dHJrVzk4Y3ZhWms4V3UrZ292Ci82YStjeVkvK1prRnZXTWpQUmRVa3FRbUN2Q1RvQW15MEhUTDNQQzBPYUFKc1BWd2U5c2lNSVBNU28xeUpsbWEKVm92YURyMnQrbWRmbHpPYkk4YnpsMkRCZzFFb2h3bEJaMmszejlWc0I3cElVMVdLNUtjcklIS0xqMzExckR4dQpqcTJkemd0M2F4eXNiSDFwc2g4cUpZSWUyLzBQRWt3ZFkzQjV3WFFJSEpqNjNNd1MvTkYvbzYyKzlLOHRMVm83CjJRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSVDBib28yenA4NmRMaQpvSXdqRk90a2xzVnIzREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDbkU0WGltYWcrSTQxT3pPWFk5Z3ZQZWNWK3pSUjgKektBNFJCTnZVOWpvYUJBZlR5S3pDc24wbzlVUVZZbWF2K3pFaHZtT3Z3K3I4NVZpZWhCOE5NZXY2NG9hWjlEagp6UG96dGVmdCs2eE9IZTUwbUp6RWgrbDIyMXMyT2NBZm9XNFArSU85KzNlWjhIakxpKzU5clFvTU4vbC9nTlRyClZVVldsejJmanA2MGFmSm9nb2wrU0FIaGJXTkdFRUZnRndLUUZLOUlRaURjNkp6VW1PTDdoR1NRcTNBQ3k1TlQKdE1sTm9TV1pmMHJRNURGcnZBc1NNSVhqazdKMWJMQzJwZE0zRzZKeENXaEVtOEttWG9TYm5JSEQrZ1NubXBKcwoyb2dIbVBLRFVHdTFDUFZvOTNiZTBBMjZSeTNtMWRlT2lzZFd4VWZMZkFtU01jNDZJR0YxSXl0VQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeEl0MmVSdm9DOUlvN1I1K2twN29OdnhYUFQ3VUxCQTcrcVhSaVFXQkE1eUIyNUFqCnl0NGRJaTNZaENvenFiaTBEZmtadEpOaGlvMjFmWGtlYWlDNG10d0p4VG5HcGhaQ2Job2RhRkQyYVR1OXpkTTEKNGdGRGNhNG9VWGhvZyttUnU4dHJrVzk4Y3ZhWms4V3UrZ292LzZhK2N5WS8rWmtGdldNalBSZFVrcVFtQ3ZDVApvQW15MEhUTDNQQzBPYUFKc1BWd2U5c2lNSVBNU28xeUpsbWFWb3ZhRHIydCttZGZsek9iSThiemwyREJnMUVvCmh3bEJaMmszejlWc0I3cElVMVdLNUtjcklIS0xqMzExckR4dWpxMmR6Z3QzYXh5c2JIMXBzaDhxSllJZTIvMFAKRWt3ZFkzQjV3WFFJSEpqNjNNd1MvTkYvbzYyKzlLOHRMVm83MlFJREFRQUJBb0lCQUUvY0x2NVV0WHVnSUJzQQo2Z01mYUZGM1JPZFEwUnM2V1hTbHpiYjBNcERLRmdXbDByVktmT0gzYU9PQzFrMGZES0lrMWlvR1BIcjB5NHE1CkhQK1lYZ29tWUIzd05PUWxaVWFoZTlONEdqZDJHOUEzQXN6YklKRmZaMmg3R1ZTSUlqd0JFcXNjZHArcnpZazYKcUxkV1RseDlYeU1ncHB2L2JsS2VwcUhiQ2ZVdTRLT25CT0RqcThhMTdtYzJvMWdRK0FFTi85T0cyVm9aem92RgpLc2cxeFJzMEx4L1p4Q2lVZ1FhUFNLREM1c2c5MFRHMktaYzZCWGZsbWthM2ZUd1pOY3RJUER5RFJIT3pCVVI1Cm1KVzVHOXZMZHIycHY0OHl4WExuYjVrRld6OFI4d3Q2M0xJTlg5elNCamlZeElTOU1GczROdExMY3FOelRVd2cKa0ZSakUxRUNnWUVBejRjUm1OMDF2c3QvdTdTTi9UeXI3Mno0YUlpTXltL2ZpVHg3NDRMZEtJTys5bE9CaExqZQozOW15dGVkbTZSQ2hwVEtvZlhnTmlzd0RLQUZING55OVV2Y3FySVhqa2JublpWcXgrSm1KZExEVmIvSDd3OGxhCnJuN05aa2VnZGk2V3pISmp3bXU5ZmN2dndiSC9jcllEY1dWWWhmOEpZY2RyelpMc3RRS3liMlVDZ1lFQThuT3YKWGpSdEk2RzZqY1J6dWJpZ2RycVA3L01xT2NtWEloZ1VQbUYrUWpBN1lCSzF3Mk1kM25QZXdFTDNDVkJNajRUbApSMmFDVG16cWxWRXhyaFFYdTdqTnVpL2tuTkxFeUhDeXltdTd3ZHZaOFdFZVFTZGttWERiT0xnSjIySytSWWF6Ck5OSENoeWIzbzNqRFBhU2lDeGVaTjJIZ0xONC9pRVhCc2lmOUZXVUNnWUVBeHk4R3JzZXk3QnQ1ei9sdVJ0N1MKejR5eHAvTlgzbjBkK2lSNWJGYVFXbkNJK3ZnUFdnbnVzTC9NRFZlNnFIdjBDaERqTXZubFZaQ1dmdkVydzdDaQpMbDFaTWhtWDRLaWo5ZDNrNzR5K0o2Z0tVOVhZSllTL2FyZitBT3RDa2V3SmhOVk45cTllUXIxWXMzcGFpZ2swCnFNUHpBVGxXRWVsTUNSVzU1OHBjNVJrQ2dZQnNiWG9uR2pFWTkxSVQ1cUNPbFZnRjRRZFFHeUp1TjQ2RWE5cFoKejRZRW1jZGovdG9VNkhYS0wyMlY5QnpBcUkya3ZaMUFJa0x5U2RsYkw3V1ZFVjFQMGFVSHVEVjRRUFpLWWNSRApySXlLZFFUeDR5b0JuMWxwR2NTZ2lBVzRmRjkxZm5rVWpSNS9ETmxBM1ZnTGNGNGJzZEVPcUpIMTN1cnd5YW1IClFFVDUxUUtCZ1FESXErRGoyUGVoSzN0TExHR1A2RFpPNjkvZFBNT2lsRWVRZGNoTjM5bG4zdWlSMmk3Z3NTZE8KV2lHOW8xQytML1JGWStlWjU1TG5jckJLUGt3M25EUzAvTlozV3FBM25aMjNwZjNMbWw0bTh2K3B3NjVRSzRRUAp0RmNPTWdFeTdkRUJZb1RZSGZkWllFVzUyYkpHdFBNbTR6eG83SHM0TnluUVN5L05vblI0cVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        ---
        # Source: cilium/templates/cilium-configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: cilium-config
          namespace: kube-system
        data:

          # Identity allocation mode selects how identities are shared between cilium
          # nodes by setting how they are stored. The options are "crd" or "kvstore".
          # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
          #   These can be queried with:
          #     kubectl get ciliumid
          # - "kvstore" stores identities in an etcd kvstore, that is
          #   configured below. Cilium versions before 1.6 supported only the kvstore
          #   backend. Upgrades from these older cilium versions should continue using
          #   the kvstore by commenting out the identity-allocation-mode below, or
          #   setting it to "kvstore".
          identity-allocation-mode: crd
          identity-heartbeat-timeout: "30m0s"
          identity-gc-interval: "15m0s"
          cilium-endpoint-gc-interval: "5m0s"
          nodes-gc-interval: "5m0s"
          skip-cnp-status-startup-clean: "false"

          # If you want to run cilium in debug mode change this value to true
          debug: "false"
          debug-verbose: ""
          # The agent can be put into the following three policy enforcement modes
          # default, always and never.
          # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
          enable-policy: "default"
          policy-cidr-match-mode: ""
          # If you want metrics enabled in all of your Cilium agents, set the port for
          # which the Cilium agents will have their metrics exposed.
          # This option deprecates the "prometheus-serve-addr" in the
          # "cilium-metrics-config" ConfigMap
          # NOTE that this will open the port on ALL nodes where Cilium pods are
          # scheduled.
          prometheus-serve-addr: ":9962"
          # A space-separated list of controller groups for which to enable metrics.
          # The special values of "all" and "none" are supported.
          controller-group-metrics:
            write-cni-file
            sync-host-ips
            sync-lb-maps-with-k8s-services
          # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
          # field is not set.
          proxy-prometheus-port: "9964"
          # If you want metrics enabled in cilium-operator, set the port for
          # which the Cilium Operator will have their metrics exposed.
          # NOTE that this will open the port on the nodes where Cilium operator pod
          # is scheduled.
          operator-prometheus-serve-addr: ":9963"
          enable-metrics: "true"

          # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
          # address.
          enable-ipv4: "true"

          # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
          # address.
          enable-ipv6: "false"
          # Users who wish to specify their own custom CNI configuration file must set
          # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
          custom-cni-conf: "false"
          enable-bpf-clock-probe: "false"
          # If you want cilium monitor to aggregate tracing for packets, set this level
          # to "low", "medium", or "maximum". The higher the level, the less packets
          # that will be seen in monitor output.
          monitor-aggregation: medium

          # The monitor aggregation interval governs the typical time between monitor
          # notification events for each allowed connection.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-interval: "5s"

          # The monitor aggregation flags determine which TCP flags which, upon the
          # first observation, cause monitor notifications to be generated.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-flags: all
          # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
          # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
          bpf-map-dynamic-size-ratio: "0.0025"
          # bpf-policy-map-max specifies the maximum number of entries in endpoint
          # policy map (per endpoint)
          bpf-policy-map-max: "16384"
          # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
          # backend and affinity maps.
          bpf-lb-map-max: "65536"
          bpf-lb-external-clusterip: "false"

          # Pre-allocation of map entries allows per-packet latency to be reduced, at
          # the expense of up-front memory allocation for the entries in the maps. The
          # default value below will minimize memory usage in the default installation;
          # users who are sensitive to latency may consider setting this to "true".
          #
          # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
          # this option and behave as though it is set to "true".
          #
          # If this value is modified, then during the next Cilium startup the restore
          # of existing endpoints and tracking of ongoing connections may be disrupted.
          # As a result, reply packets may be dropped and the load-balancing decisions
          # for established connections may change.
          #
          # If this option is set to "false" during an upgrade from 1.3 or earlier to
          # 1.4 or later, then it may cause one-time disruptions during the upgrade.
          preallocate-bpf-maps: "false"

          # Regular expression matching compatible Istio sidecar istio-proxy
          # container image names
          sidecar-istio-proxy-image: "cilium/istio_proxy"

          # Name of the cluster. Only relevant when building a mesh of clusters.
          cluster-name: default
          # Unique ID of the cluster. Must be unique across all conneted clusters and
          # in the range of 1 and 255. Only relevant when building a mesh of clusters.
          cluster-id: "0"

          # Encapsulation mode for communication between nodes
          # Possible values:
          #   - disabled
          #   - vxlan (default)
          #   - geneve
          # Default case
          routing-mode: "tunnel"
          tunnel-protocol: "vxlan"
          service-no-backend-response: "reject"


          # Enables L7 proxy for L7 policy enforcement and visibility
          enable-l7-proxy: "true"

          enable-ipv4-masquerade: "true"
          enable-ipv4-big-tcp: "false"
          enable-ipv6-big-tcp: "false"
          enable-ipv6-masquerade: "true"
          enable-masquerade-to-route-source: "false"

          enable-xt-socket-fallback: "true"
          install-no-conntrack-iptables-rules: "false"

          auto-direct-node-routes: "false"
          enable-local-redirect-policy: "false"
          # List of devices used to attach bpf_host.o (implements BPF NodePort,
          # host-firewall and BPF masquerading)
          devices: "eth0 net0"

          kube-proxy-replacement: "true"
          kube-proxy-replacement-healthz-bind-address: ""
          bpf-lb-sock: "false"
          enable-health-check-nodeport: "true"
          enable-health-check-loadbalancer-ip: "false"
          node-port-bind-protection: "true"
          enable-auto-protect-node-port-range: "true"
          bpf-lb-acceleration: "disabled"
          enable-svc-source-range-check: "true"
          enable-l2-neigh-discovery: "true"
          arping-refresh-period: "30s"
          enable-k8s-networkpolicy: "true"
          # Tell the agent to generate and write a CNI configuration file
          write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
          cni-exclusive: "true"
          cni-log-file: "/var/run/cilium/cilium-cni.log"
          enable-endpoint-health-checking: "true"
          enable-health-checking: "true"
          enable-well-known-identities: "false"
          enable-remote-node-identity: "true"
          synchronize-k8s-nodes: "true"
          operator-api-serve-addr: "127.0.0.1:9234"
          # Enable Hubble gRPC service.
          enable-hubble: "true"
          # UNIX domain socket for Hubble server to listen to.
          hubble-socket-path: "/var/run/cilium/hubble.sock"
          # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
          # field is not set.
          hubble-metrics-server: ":9965"
          # A space separated list of metrics to enable. See [0] for available metrics.
          #
          # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
          hubble-metrics:
            dns
            drop
            tcp
            flow
            port-distribution
            icmp
            httpV2:exemplars=true;labelsContext=source_ip,source_namespace,source_workload,destination_ip,destination_namespace,destination_workload,traffic_direction
          enable-hubble-open-metrics: "true"
          hubble-export-file-max-size-mb: "10"
          hubble-export-file-max-backups: "5"
          # An additional address for Hubble server to listen to (e.g. ":4244").
          hubble-listen-address: ":4244"
          hubble-disable-tls: "false"
          hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
          hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
          hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
          ipam: "kubernetes"
          ipam-cilium-node-update-rate: "15s"
          egress-gateway-reconciliation-trigger-interval: "1s"
          enable-vtep: "false"
          vtep-endpoint: ""
          vtep-cidr: ""
          vtep-mask: ""
          vtep-mac: ""
          # Enable L2 announcements
          enable-l2-announcements: "true"
          l2-announcements-lease-duration: "3s"
          l2-announcements-renew-deadline: "1s"
          l2-announcements-retry-period: "500ms"
          enable-bgp-control-plane: "false"
          procfs: "/host/proc"
          bpf-root: "/sys/fs/bpf"
          cgroup-root: "/sys/fs/cgroup"
          enable-k8s-terminating-endpoint: "true"
          enable-sctp: "false"

          k8s-client-qps: "10"
          k8s-client-burst: "20"
          remove-cilium-node-taints: "true"
          set-cilium-node-taints: "true"
          set-cilium-is-up-condition: "true"
          unmanaged-pod-watcher-interval: "15"
          # default DNS proxy to transparent mode in non-chaining modes
          dnsproxy-enable-transparent-mode: "true"
          tofqdns-dns-reject-response-code: "refused"
          tofqdns-enable-dns-compression: "true"
          tofqdns-endpoint-max-ip-per-hostname: "50"
          tofqdns-idle-connection-grace-period: "0s"
          tofqdns-max-deferred-connection-deletes: "10000"
          tofqdns-proxy-response-max-delay: "100ms"
          agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

          mesh-auth-enabled: "true"
          mesh-auth-queue-size: "1024"
          mesh-auth-rotated-identities-queue-size: "1024"
          mesh-auth-gc-interval: "5m0s"

          proxy-connect-timeout: "2"
          proxy-max-requests-per-connection: "0"
          proxy-max-connection-duration-seconds: "0"

          external-envoy-proxy: "false"
          max-connected-clusters: "255"

        # Extra config allows adding arbitrary properties to the cilium config.
        # By putting it at the end of the ConfigMap, it's also possible to override existing properties.
        ---
        # Source: cilium/templates/hubble-relay/configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: hubble-relay-config
          namespace: kube-system
        data:
          config.yaml: |
            cluster-name: default
            peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
            listen-address: :4245
            gops: true
            gops-port: "9893"
            dial-timeout: 
            retry-timeout: 
            sort-buffer-len-max: 
            sort-buffer-drain-timeout: 
            tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
            tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
            tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
            disable-server-tls: true
        ---
        # Source: cilium/templates/hubble-ui/configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: hubble-ui-nginx
          namespace: kube-system
        data:
          nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
        ---
        # Source: cilium/templates/cilium-agent/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - services
          - pods
          - endpoints
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
          - list
          - delete
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - watch
          # This is used when validating policies in preflight. This will need to stay
          # until we figure out how to avoid "get" inside the preflight, and then
          # should be removed ideally.
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumbgppeeringpolicies
          - ciliumbgpnodeconfigs
          - ciliumbgpadvertisements
          - ciliumbgppeerconfigs
          - ciliumclusterwideenvoyconfigs
          - ciliumclusterwidenetworkpolicies
          - ciliumegressgatewaypolicies
          - ciliumendpoints
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumidentities
          - ciliumlocalredirectpolicies
          - ciliumnetworkpolicies
          - ciliumnodes
          - ciliumnodeconfigs
          - ciliumcidrgroups
          - ciliuml2announcementpolicies
          - ciliumpodippools
          verbs:
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          - ciliumendpoints
          - ciliumnodes
          verbs:
          - create
        - apiGroups:
          - cilium.io
          # To synchronize garbage collection of such resources
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          verbs:
          - delete
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          - ciliumnodes/status
          verbs:
          - get
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          - ciliumendpoints/status
          - ciliumendpoints
          - ciliuml2announcementpolicies/status
          - ciliumbgpnodeconfigs/status
          verbs:
          - patch
        ---
        # Source: cilium/templates/cilium-operator/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          # to automatically delete [core|kube]dns pods so that are starting to being
          # managed by Cilium
          - delete
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # To remove node taints
          - nodes
          # To set NetworkUnavailable false on startup
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform LB IP allocation for BGP
          - services/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          # to check apiserver connectivity
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform the translation of a CNP that contains `ToGroup` to its endpoints
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies
          - ciliumclusterwidenetworkpolicies
          verbs:
          # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
          - create
          - update
          - deletecollection
          # To update the status of the CNPs and CCNPs
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          verbs:
          # Update the auto-generated CNPs and CCNPs status.
          - patch
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          - ciliumidentities
          verbs:
          # To perform garbage collection of such resources
          - delete
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          # To synchronize garbage collection of such resources
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          verbs:
          - create
          - update
          - get
          - list
          - watch
            # To perform CiliumNode garbage collector
          - delete
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes/status
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumbgppeerconfigs
          - ciliumbgpadvertisements
          - ciliumbgpnodeconfigs
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
          - patch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - update
          resourceNames:
          - ciliumloadbalancerippools.cilium.io
          - ciliumbgppeeringpolicies.cilium.io
          - ciliumbgpclusterconfigs.cilium.io
          - ciliumbgppeerconfigs.cilium.io
          - ciliumbgpadvertisements.cilium.io
          - ciliumbgpnodeconfigs.cilium.io
          - ciliumbgpnodeconfigoverrides.cilium.io
          - ciliumclusterwideenvoyconfigs.cilium.io
          - ciliumclusterwidenetworkpolicies.cilium.io
          - ciliumegressgatewaypolicies.cilium.io
          - ciliumendpoints.cilium.io
          - ciliumendpointslices.cilium.io
          - ciliumenvoyconfigs.cilium.io
          - ciliumexternalworkloads.cilium.io
          - ciliumidentities.cilium.io
          - ciliumlocalredirectpolicies.cilium.io
          - ciliumnetworkpolicies.cilium.io
          - ciliumnodes.cilium.io
          - ciliumnodeconfigs.cilium.io
          - ciliumcidrgroups.cilium.io
          - ciliuml2announcementpolicies.cilium.io
          - ciliumpodippools.cilium.io
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumpodippools
          - ciliumbgpclusterconfigs
          - ciliumbgpnodeconfigoverrides
          verbs:
          - get
          - list
          - watch
        - apiGroups:
            - cilium.io
          resources:
            - ciliumpodippools
          verbs:
            - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools/status
          verbs:
          - patch
        # For cilium-operator running in HA mode.
        #
        # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
        # between multiple running instances.
        # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
        # common and fewer objects in the cluster watch "all Leases".
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        ---
        # Source: cilium/templates/hubble-ui/clusterrole.yaml
        kind: ClusterRole
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: hubble-ui
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - componentstatuses
          - endpoints
          - namespaces
          - nodes
          - pods
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - "*"
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium
        subjects:
        - kind: ServiceAccount
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium-operator
        subjects:
        - kind: ServiceAccount
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: hubble-ui
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: hubble-ui
        subjects:
        - kind: ServiceAccount
          name: "hubble-ui"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-agent/role.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/templates/cilium-agent/rolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-config-agent
        subjects:
          - kind: ServiceAccount
            name: "cilium"
            namespace: kube-system
        ---
        # Source: cilium/templates/cilium-agent/service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: cilium-agent
          namespace: kube-system
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9964"
          labels:
            k8s-app: cilium
            app.kubernetes.io/name: cilium-agent
            app.kubernetes.io/part-of: cilium
        spec:
          clusterIP: None
          type: ClusterIP
          selector:
            k8s-app: cilium
          ports:
          - name: envoy-metrics
            port: 9964
            protocol: TCP
            targetPort: envoy-metrics
        ---
        # Source: cilium/templates/hubble-relay/service.yaml
        kind: Service
        apiVersion: v1
        metadata:
          name: hubble-relay
          namespace: kube-system
          labels:
            k8s-app: hubble-relay
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
        spec:
          type: "ClusterIP"
          selector:
            k8s-app: hubble-relay
          ports:
          - protocol: TCP
            port: 80
            targetPort: 4245
        ---
        # Source: cilium/templates/hubble-ui/service.yaml
        kind: Service
        apiVersion: v1
        metadata:
          name: hubble-ui
          namespace: kube-system
          labels:
            k8s-app: hubble-ui
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
        spec:
          type: "ClusterIP"
          selector:
            k8s-app: hubble-ui
          ports:
            - name: http
              port: 80
              targetPort: 8081
        ---
        # Source: cilium/templates/hubble/metrics-service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: hubble-metrics
          namespace: kube-system
          labels:
            k8s-app: hubble
            app.kubernetes.io/name: hubble
            app.kubernetes.io/part-of: cilium
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9965"
        spec:
          clusterIP: None
          type: ClusterIP
          ports:
          - name: hubble-metrics
            port: 9965
            protocol: TCP
            targetPort: hubble-metrics
          selector:
            k8s-app: cilium
        ---
        # Source: cilium/templates/hubble/peer-service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: hubble-peer
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: hubble-peer
        spec:
          selector:
            k8s-app: cilium
          ports:
          - name: peer-service
            port: 443
            protocol: TCP
            targetPort: 4244
          internalTrafficPolicy: Local
        ---
        # Source: cilium/templates/cilium-agent/daemonset.yaml
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: cilium
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-agent
        spec:
          selector:
            matchLabels:
              k8s-app: cilium
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/port: "9962"
                prometheus.io/scrape: "true"
                # Set app AppArmor's profile to "unconfined". The value of this annotation
                # can be modified as long users know which profiles they have available
                # in AppArmor.
                container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
                container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
              labels:
                k8s-app: cilium
                app.kubernetes.io/name: cilium-agent
                app.kubernetes.io/part-of: cilium
            spec:
              containers:
              - name: cilium-agent
                image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-agent
                args:
                - --config-dir=/tmp/cilium/config-map
                startupProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  failureThreshold: 105
                  periodSeconds: 2
                  successThreshold: 1
                  initialDelaySeconds: 5
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 10
                  timeoutSeconds: 5
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 3
                  timeoutSeconds: 5
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_CLUSTERMESH_CONFIG
                  value: /var/lib/cilium/clustermesh/
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      resource: limits.memory
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                lifecycle:
                  postStart:
                    exec:
                      command:
                      - "bash"
                      - "-c"
                      - |
                            set -o errexit
                            set -o pipefail
                            set -o nounset
                            
                            # When running in AWS ENI mode, it's likely that 'aws-node' has
                            # had a chance to install SNAT iptables rules. These can result
                            # in dropped traffic, so we should attempt to remove them.
                            # We do it using a 'postStart' hook since this may need to run
                            # for nodes which might have already been init'ed but may still
                            # have dangling rules. This is safe because there are no
                            # dependencies on anything that is part of the startup script
                            # itself, and can be safely run multiple times per node (e.g. in
                            # case of a restart).
                            if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                            then
                                echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                                iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                            fi
                            echo 'Done!'
                            
                  preStop:
                    exec:
                      command:
                      - /cni-uninstall.sh
                ports:
                - name: peer-service
                  containerPort: 4244
                  hostPort: 4244
                  protocol: TCP
                - name: prometheus
                  containerPort: 9962
                  hostPort: 9962
                  protocol: TCP
                - name: envoy-metrics
                  containerPort: 9964
                  hostPort: 9964
                  protocol: TCP
                - name: hubble-metrics
                  containerPort: 9965
                  hostPort: 9965
                  protocol: TCP
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    add:
                      - CHOWN
                      - KILL
                      - NET_ADMIN
                      - NET_RAW
                      - IPC_LOCK
                      - SYS_ADMIN
                      - SYS_RESOURCE
                      - DAC_OVERRIDE
                      - FOWNER
                      - SETGID
                      - SETUID
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                # Unprivileged containers need to mount /proc/sys/net from the host
                # to have write access
                - mountPath: /host/proc/sys/net
                  name: host-proc-sys-net
                # Unprivileged containers need to mount /proc/sys/kernel from the host
                # to have write access
                - mountPath: /host/proc/sys/kernel
                  name: host-proc-sys-kernel
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Unprivileged containers can't set mount propagation to bidirectional
                  # in this case we will mount the bpf fs from an init container that
                  # is privileged and set the mount propagation from host to container
                  # in Cilium.
                  mountPropagation: HostToContainer
                # Check for duplicate mounts before mounting
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                - name: cilium-run
                  mountPath: /var/run/cilium
                - name: etc-cni-netd
                  mountPath: /host/etc/cni/net.d
                - name: clustermesh-secrets
                  mountPath: /var/lib/cilium/clustermesh
                  readOnly: true
                  # Needed to be able to load kernel modules
                - name: lib-modules
                  mountPath: /lib/modules
                  readOnly: true
                - name: xtables-lock
                  mountPath: /run/xtables.lock
                - name: hubble-tls
                  mountPath: /var/lib/cilium/tls/hubble
                  readOnly: true
                - name: tmp
                  mountPath: /tmp
              initContainers:
              - name: config
                image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-dbg
                - build-config
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                volumeMounts:
                - name: tmp
                  mountPath: /tmp
                terminationMessagePolicy: FallbackToLogsOnError
              # Mount the bpf fs if it is not mounted. We will perform this task
              # from a privileged container because the mount propagation bidirectional
              # only works from privileged containers.
              - name: mount-bpf-fs
                image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
                imagePullPolicy: IfNotPresent
                args:
                - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
                command:
                - /bin/bash
                - -c
                - --
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  privileged: true
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  mountPropagation: Bidirectional
              - name: clean-cilium-state
                image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
                imagePullPolicy: IfNotPresent
                command:
                - /init-container.sh
                env:
                - name: CILIUM_ALL_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-state
                      optional: true
                - name: CILIUM_BPF_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-bpf-state
                      optional: true
                - name: WRITE_CNI_CONF_WHEN_READY
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: write-cni-conf-when-ready
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    add:
                      - NET_ADMIN
                      - SYS_ADMIN
                      - SYS_RESOURCE
                    drop:
                      - ALL
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Required to mount cgroup filesystem from the host to cilium agent pod
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                  mountPropagation: HostToContainer
                - name: cilium-run
                  mountPath: /var/run/cilium # wait-for-kube-proxy
              # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
              - name: install-cni-binaries
                image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
                imagePullPolicy: IfNotPresent
                command:
                  - "/install-plugin.sh"
                resources:
                  requests:
                    cpu: 100m
                    memory: 10Mi
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                  - name: cni-path
                    mountPath: /host/opt/cni/bin # .Values.cni.install
              restartPolicy: Always
              priorityClassName: system-node-critical
              serviceAccount: "cilium"
              serviceAccountName: "cilium"
              automountServiceAccountToken: true
              terminationGracePeriodSeconds: 1
              hostNetwork: true
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # For sharing configuration between the "config" initContainer and the agent
              - name: tmp
                emptyDir: {}
                # To keep state between restarts / upgrades
              - name: cilium-run
                hostPath:
                  path: /var/run/cilium
                  type: DirectoryOrCreate
                # To keep state between restarts / upgrades for bpf maps
              - name: bpf-maps
                hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
              # To keep state between restarts / upgrades for cgroup2 filesystem
              - name: cilium-cgroup
                hostPath:
                  path: /sys/fs/cgroup
                  type: DirectoryOrCreate
              # To install cilium cni plugin in the host
              - name: cni-path
                hostPath:
                  path:  /opt/cni/bin
                  type: DirectoryOrCreate
                # To install cilium cni configuration in the host
              - name: etc-cni-netd
                hostPath:
                  path: /etc/cni/net.d
                  type: DirectoryOrCreate
                # To be able to load kernel modules
              - name: lib-modules
                hostPath:
                  path: /lib/modules
                # To access iptables concurrently with other processes (e.g. kube-proxy)
              - name: xtables-lock
                hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
                # To read the clustermesh configuration
              - name: clustermesh-secrets
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: cilium-clustermesh
                      optional: true
                      # note: items are not explicitly listed here, since the entries of this secret
                      # depend on the peers configured, and that would cause a restart of all agents
                      # at every addition/removal. Leaving the field empty makes each secret entry
                      # to be automatically projected into the volume as a file whose name is the key.
                  - secret:
                      name: clustermesh-apiserver-remote-cert
                      optional: true
                      items:
                      - key: tls.key
                        path: common-etcd-client.key
                      - key: tls.crt
                        path: common-etcd-client.crt
                      - key: ca.crt
                        path: common-etcd-client-ca.crt
              - name: host-proc-sys-net
                hostPath:
                  path: /proc/sys/net
                  type: Directory
              - name: host-proc-sys-kernel
                hostPath:
                  path: /proc/sys/kernel
                  type: Directory
              - name: hubble-tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-server-certs
                      optional: true
                      items:
                      - key: tls.crt
                        path: server.crt
                      - key: tls.key
                        path: server.key
                      - key: ca.crt
                        path: client-ca.crt
        ---
        # Source: cilium/templates/cilium-operator/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: cilium-operator
          namespace: kube-system
          labels:
            io.cilium/app: operator
            name: cilium-operator
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-operator
        spec:
          # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
          # for more details.
          replicas: 2
          selector:
            matchLabels:
              io.cilium/app: operator
              name: cilium-operator
          # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
          # of one replica and no user configured Recreate strategy.
          # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
          # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 50%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/port: "9963"
                prometheus.io/scrape: "true"
              labels:
                io.cilium/app: operator
                name: cilium-operator
                app.kubernetes.io/part-of: cilium
                app.kubernetes.io/name: cilium-operator
            spec:
              containers:
              - name: cilium-operator
                image: "quay.io/cilium/operator-generic:v1.15.0@sha256:e26ecd316e742e4c8aa1e302ba8b577c2d37d114583d6c4cdd2b638493546a79"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-operator-generic
                args:
                - --config-dir=/tmp/cilium/config-map
                - --debug=$(CILIUM_DEBUG)
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: debug
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                ports:
                - name: prometheus
                  containerPort: 9963
                  hostPort: 9963
                  protocol: TCP
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 3
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 3
                  failureThreshold: 5
                volumeMounts:
                - name: cilium-config-path
                  mountPath: /tmp/cilium/config-map
                  readOnly: true
                terminationMessagePolicy: FallbackToLogsOnError
              hostNetwork: true
              restartPolicy: Always
              priorityClassName: system-cluster-critical
              serviceAccount: "cilium-operator"
              serviceAccountName: "cilium-operator"
              automountServiceAccountToken: true
              # In HA mode, cilium-operator pods must not be scheduled on the same
              # node as they will clash with each other.
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        io.cilium/app: operator
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # To read the configuration from the config map
              - name: cilium-config-path
                configMap:
                  name: cilium-config
        ---
        # Source: cilium/templates/hubble-relay/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: hubble-relay
          namespace: kube-system
          labels:
            k8s-app: hubble-relay
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-relay
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                k8s-app: hubble-relay
                app.kubernetes.io/name: hubble-relay
                app.kubernetes.io/part-of: cilium
            spec:
              securityContext:
                fsGroup: 65532
              containers:
                - name: hubble-relay
                  securityContext:
                    capabilities:
                      drop:
                      - ALL
                    runAsGroup: 65532
                    runAsNonRoot: true
                    runAsUser: 65532
                  image: "quay.io/cilium/hubble-relay:v1.15.0@sha256:45b3ea70b73aee01644f800b8f6138c36446bfb130d2b88b0f75775ebe6a9ab6"
                  imagePullPolicy: IfNotPresent
                  command:
                    - hubble-relay
                  args:
                    - serve
                  ports:
                    - name: grpc
                      containerPort: 4245
                  readinessProbe:
                    grpc:
                      port: 4222
                    timeoutSeconds: 3
                  livenessProbe:
                    grpc:
                      port: 4222
                    timeoutSeconds: 3
                  startupProbe:
                    # give the relay one minute to start up
                    grpc:
                      port: 4222
                    timeoutSeconds: 3
                    failureThreshold: 20
                    periodSeconds: 3
                  volumeMounts:
                  - name: config
                    mountPath: /etc/hubble-relay
                    readOnly: true
                  - name: tls
                    mountPath: /var/lib/hubble-relay/tls
                    readOnly: true
                  terminationMessagePolicy: FallbackToLogsOnError
              restartPolicy: Always
              priorityClassName: 
              serviceAccount: "hubble-relay"
              serviceAccountName: "hubble-relay"
              automountServiceAccountToken: false
              terminationGracePeriodSeconds: 1
              affinity:
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              volumes:
              - name: config
                configMap:
                  name: hubble-relay-config
                  items:
                  - key: config.yaml
                    path: config.yaml
              - name: tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-relay-client-certs
                      items:
                        - key: tls.crt
                          path: client.crt
                        - key: tls.key
                          path: client.key
                        - key: ca.crt
                          path: hubble-server-ca.crt
        ---
        # Source: cilium/templates/hubble-ui/deployment.yaml
        kind: Deployment
        apiVersion: apps/v1
        metadata:
          name: hubble-ui
          namespace: kube-system
          labels:
            k8s-app: hubble-ui
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-ui
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                k8s-app: hubble-ui
                app.kubernetes.io/name: hubble-ui
                app.kubernetes.io/part-of: cilium
            spec:
              priorityClassName: 
              serviceAccount: "hubble-ui"
              serviceAccountName: "hubble-ui"
              automountServiceAccountToken: true
              containers:
              - name: frontend
                image: "quay.io/cilium/hubble-ui:v0.12.3@sha256:e6b825302fc1e406b1305363fe0bcd1fdf95730b32c2b99a2b36dfa37bdaeec2"
                imagePullPolicy: IfNotPresent
                ports:
                - name: http
                  containerPort: 8081
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                readinessProbe:
                  httpGet:
                    path: /
                    port: 8081
                volumeMounts:
                - name: hubble-ui-nginx-conf
                  mountPath: /etc/nginx/conf.d/default.conf
                  subPath: nginx.conf
                - name: tmp-dir
                  mountPath: /tmp
                terminationMessagePolicy: FallbackToLogsOnError
              - name: backend
                image: "quay.io/cilium/hubble-ui-backend:v0.12.3@sha256:1cd84251cec46e20f9e839ee0afba9b51c8de59d35681234f701d7f42062f138"
                imagePullPolicy: IfNotPresent
                env:
                - name: EVENTS_SERVER_PORT
                  value: "8090"
                - name: FLOWS_API_ADDR
                  value: "hubble-relay:80"
                ports:
                - name: grpc
                  containerPort: 8090
                volumeMounts:
                terminationMessagePolicy: FallbackToLogsOnError
              nodeSelector:
                kubernetes.io/os: linux
              volumes:
              - configMap:
                  defaultMode: 420
                  name: hubble-ui-nginx
                name: hubble-ui-nginx-conf
              - emptyDir: {}
                name: tmp-dir
